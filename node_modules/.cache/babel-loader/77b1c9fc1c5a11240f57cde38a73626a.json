{"ast":null,"code":"var _jsxFileName = \"/Users/brenoaraujo/projects-to-github/FrontendOnlineStore/src/pages/Search.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport '../styles/Search.css';\nimport ProductsQuery from '../components/ProductQuery';\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.handleInput = event => {\n      const {\n        value\n      } = event.target;\n      this.setState({\n        inputValue: value\n      });\n    };\n\n    this.setStateProductsFromQuery = async () => {\n      const {\n        inputValue\n      } = this.state;\n      const {\n        results\n      } = await getProductsFromCategoryAndQuery('', inputValue);\n      const productsQuery = results.map(_ref => {\n        let {\n          title,\n          thumbnail,\n          price,\n          id,\n          attributes\n        } = _ref;\n        return {\n          title,\n          thumbnail,\n          price,\n          id,\n          attributes\n        };\n      });\n      this.setState({\n        stateProductsQuery: productsQuery,\n        totalProducts: productsQuery.length\n      });\n    };\n\n    this.setStateProductsFromCategory = _ref2 => {\n      let {\n        results\n      } = _ref2;\n      this.setState({\n        stateProductsQuery: results,\n        totalProducts: results.length\n      });\n    };\n\n    this.state = {\n      inputValue: '',\n      stateProductsQuery: '',\n      totalProducts: ''\n    };\n  }\n\n  render() {\n    const {\n      inputValue,\n      stateProductsQuery,\n      totalProducts\n    } = this.state;\n    const {\n      setStateApp,\n      setStateCart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"Search_categories\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Categories, {\n      setStateProductsFromCategory: this.setStateProductsFromCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"Search_main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"query-input\",\n      onChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"query-button\",\n      onClick: this.setStateProductsFromQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Pesquisar\"), inputValue ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, \"testeTru\") : /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"home-initial-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \"Digite algum termo de pesquisa ou escolha uma categoria.\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/shopping-cart\",\n      \"data-testid\": \"shopping-cart-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"Carrinho\")), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"Search_products\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, stateProductsQuery !== '' && stateProductsQuery.map(_ref3 => {\n      let {\n        title,\n        thumbnail,\n        price,\n        id,\n        attributes\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(ProductsQuery, {\n        key: id,\n        setStateApp: setStateApp,\n        setStateCart: setStateCart,\n        title: title,\n        thumbnail: thumbnail,\n        price: price,\n        attributes: attributes,\n        id: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 72\n        }\n      });\n    })), totalProducts === 0 && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 36\n      }\n    }, \"Nenhum produto foi encontrado\")));\n  }\n\n}\n\nSearch.propTypes = {\n  setStateApp: PropTypes.func.isRequired,\n  setStateCart: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/brenoaraujo/projects-to-github/FrontendOnlineStore/src/pages/Search.js"],"names":["React","PropTypes","Link","Categories","getProductsFromCategoryAndQuery","ProductsQuery","Search","Component","constructor","handleInput","event","value","target","setState","inputValue","setStateProductsFromQuery","state","results","productsQuery","map","title","thumbnail","price","id","attributes","stateProductsQuery","totalProducts","length","setStateProductsFromCategory","render","setStateApp","setStateCart","props","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Categories from '../components/Categories';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport '../styles/Search.css';\nimport ProductsQuery from '../components/ProductQuery';\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      inputValue: '',\n      stateProductsQuery: '',\n      totalProducts: '',\n    };\n  }\n\n  handleInput = (event) => {\n    const { value } = event.target;\n\n    this.setState({ inputValue: value });\n  }\n\n  setStateProductsFromQuery = async () => {\n    const { inputValue } = this.state;\n    const { results } = await getProductsFromCategoryAndQuery('', inputValue);\n    const productsQuery = results.map(({ title, thumbnail, price, id, attributes }) => ({\n      title,\n      thumbnail,\n      price,\n      id,\n      attributes,\n    }));\n\n    this.setState({\n      stateProductsQuery: productsQuery,\n      totalProducts: productsQuery.length,\n    });\n  }\n\n  setStateProductsFromCategory = ({ results }) => {\n    this.setState({\n      stateProductsQuery: results,\n      totalProducts: results.length,\n    });\n  }\n\n  render() {\n    const { inputValue, stateProductsQuery, totalProducts } = this.state;\n    const { setStateApp, setStateCart } = this.props;\n\n    return (\n      <div className=\"Search\">\n        <section className=\"Search_categories\">\n          <Categories\n            setStateProductsFromCategory={ this.setStateProductsFromCategory }\n          />\n        </section>\n        {/* coloquei o component aqui para renderizar e passar o teste.  */}\n        <section className=\"Search_main\">\n          <input\n            data-testid=\"query-input\"\n            onChange={ this.handleInput }\n          />\n          <button\n            type=\"button\"\n            data-testid=\"query-button\"\n            onClick={ this.setStateProductsFromQuery }\n          >\n            Pesquisar\n          </button>\n          { inputValue\n            ? <p>testeTru</p>\n            : (\n              <p data-testid=\"home-initial-message\">\n                Digite algum termo de pesquisa ou escolha uma categoria.\n              </p>\n            )}\n\n          <button type=\"button\">\n            <Link\n              to=\"/shopping-cart\"\n              data-testid=\"shopping-cart-button\"\n            >\n              Carrinho\n            </Link>\n          </button>\n          <section className=\"Search_products\">\n            { stateProductsQuery !== ''\n              && stateProductsQuery\n                .map(({ title, thumbnail, price, id, attributes }) => (<ProductsQuery\n                  key={ id }\n                  setStateApp={ setStateApp }\n                  setStateCart={ setStateCart }\n                  title={ title }\n                  thumbnail={ thumbnail }\n                  price={ price }\n                  attributes={ attributes }\n                  id={ id }\n                />)) }\n          </section>\n          { totalProducts === 0 && <p>Nenhum produto foi encontrado</p> }\n        </section>\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  setStateApp: PropTypes.func.isRequired,\n  setStateCart: PropTypes.func.isRequired,\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}